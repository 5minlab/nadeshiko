{"version":3,"sources":["webpack://nadeshiko/webpack/universalModuleDefinition","webpack://nadeshiko/webpack/bootstrap","webpack://nadeshiko/external \"path\"","webpack://nadeshiko/external \"mz/fs\"","webpack://nadeshiko/./src/sheets/index.ts","webpack://nadeshiko/./src/helpers/index.ts","webpack://nadeshiko/./src/sheets/Attribute.ts","webpack://nadeshiko/external \"js-yaml\"","webpack://nadeshiko/external \"lodash\"","webpack://nadeshiko/./src/sheets/Record.ts","webpack://nadeshiko/./src/index.ts","webpack://nadeshiko/external \"express\"","webpack://nadeshiko/./src/helpers/versions.ts","webpack://nadeshiko/external \"dayjs\"","webpack://nadeshiko/./src/protocols/index.ts","webpack://nadeshiko/external \"yup\"","webpack://nadeshiko/./src/controllers/index.ts","webpack://nadeshiko/./src/commands/fetch.ts","webpack://nadeshiko/(webpack)/buildin/module.js","webpack://nadeshiko/./src/sheets/Sheet.ts","webpack://nadeshiko/./src/sheets/Reference.ts","webpack://nadeshiko/./src/sheets/Constraint.ts","webpack://nadeshiko/./src/sheets/Metadata.ts","webpack://nadeshiko/./src/sheets/Table.ts","webpack://nadeshiko/./src/sheets/Cell.ts","webpack://nadeshiko/./src/helpers/fslib.ts","webpack://nadeshiko/./src/cache/index.ts","webpack://nadeshiko/./src/datasource/gsheet.ts","webpack://nadeshiko/external \"googleapis\""],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__export","AttributeType","attributeList","ty","Integer","prefix","Float","String","Boolean","Date","Raw","Attribute","this","make","length","Error","founds","filter","pair","startsWith","found","replace","cast","v","castInteger","castFloat","castBoolean","castDate","castString","castRaw","x","parseInt","parseFloat","undefined","includes","parseDate","match","hourOffset","year","month","day","hour","minute","second","makeAttributes","row","map","cell","Attribute_1","_","__importStar","Cell_1","INVALID_NUM_ID","INVALID_STR_ID","Record","cells","idcell","obj","forEach","raw","id","getInvalidId","makeRecord","attrs","zip","attr","data","Cell","_this","express_1","__importDefault","helpers_1","P","C","cache_1","gsheet_1","options","auth_inner","router","default","Router","metadataSheetId","redis","dataPath","serviceKey","cache","TableCache","getDataSource","__awaiter","getJWTClient","_a","sent","auth","GSheetDataSource","findVersion","req","body","version","findLatestVersion","_b","post","res","tableSchema","validate","params","table","datasource","syncTable","ok","json","getTable","content","delete","delTable","itemSchema","getRecord","item","getMetadata","metadata","limit","query","isNaN","getVersions","versions","getVersionInfo","info","contents","fetchAll","loadAll","tables","path_1","dayjs_1","fs_1","versionRegexp","makeVersion","format","findVersions","list","readDirectory","test","filterVersions","isMetadata","readdir","sort","reverse","findVersionInfo","fp","resolve","makeVersionInfo","names","yup","shape","string","required","number","min","fetch_1","fslib","sheets_1","loadMetadata","loadTable","dropTable","ds","ref","findReference","fetchSheets","sheet","makeTable","values","saveTable","touchVersion","fetch","findSheetNames","tasks","Promise","all","saveMetadata","slice","fetchReferences","fetchConstraints","metadataList","references","makeReferences","constraints","makeConstraints","Metadata","sheets","dstPath","mkdir","save","webpackPolyfill","deprecate","paths","children","getTableName","split","sanitizeRange","toDataRange","range","makeReference","ConstraintType","makeConstraint","type","firstTable","firstAttribute","secondTable","secondAttribute","ConstraintTable","js_yaml_1","saveItems","filename","items","text","dump","dst","writeFile","Record_1","Table","firstRow","find","a","readDataFile","dbPath","makeFilePath","readFile","buf","toString","load","console","error","err_1","loadConstraints","loadReferences","_d","apply","_c","concat","makeTableKey","mset","args","flatten","JSON","stringify","hmset","mget","hgetall","val","parse","b","localeCompare","compareRecordId","field","hget","del","curr","endsWith","next","set","versionData","referenceData","constraintData","dropMetadata","googleapis_1","refs","groups","groupBy","keys","sheetId","ranges","google","spreadsheets","batchGet","spreadsheetId","resp","status","statusText","valueRanges","client","JWT","client_email","private_key","reject","authorize","err","tokens"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nadeshiko\"] = factory();\n\telse\n\t\troot[\"nadeshiko\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"path\");","module.exports = require(\"mz/fs\");","export * from './Sheet';\r\nexport * from './Reference';\r\nexport * from './Constraint';\r\nexport * from './Attribute';\r\nexport * from './Metadata';\r\nexport * from './Table';\r\nexport * from './Record';\r\n","export * from './versions';\r\n","export enum AttributeType {\n\tInteger,\n\tFloat,\n\tString,\n\tBoolean,\n\tDate,\n\tRaw,\n}\n\nconst attributeList: Array<{ ty: AttributeType, prefix: string }> = [\n\t{ ty: AttributeType.Integer, prefix: 'i_' },\n\t{ ty: AttributeType.Float, prefix: 'f_' },\n\t{ ty: AttributeType.String, prefix: 's_' },\n\t{ ty: AttributeType.Boolean, prefix: 'b_' },\n\t{ ty: AttributeType.Date, prefix: 'd_' },\n\t{ ty: AttributeType.Raw, prefix: 'r_' },\n];\n\nexport type AttributeValueType = (\n\tnumber | boolean | Date | string | null | undefined\n);\n\nexport class Attribute {\n\tpublic readonly ty: AttributeType;\n\tpublic readonly name: string;\n\n\tconstructor(ty: AttributeType, name: string) {\n\t\tthis.ty = ty;\n\t\tthis.name = name;\n\t}\n\n\tpublic static make(s: string) {\n\t\tif (!s.length) { throw new Error('blank attribute name'); }\n\t\tconst founds = attributeList.filter((pair) => s.startsWith(pair.prefix));\n\t\tif (founds.length > 0) {\n\t\t\tconst found = founds[0];\n\t\t\treturn new Attribute(found.ty, s.replace(found.prefix, ''));\n\t\t} else {\n\t\t\treturn new Attribute(AttributeType.Raw, s);\n\t\t}\n\t}\n\n\tpublic cast(v: string | undefined) {\n\t\tswitch (this.ty) {\n\t\t\tcase AttributeType.Integer: return castInteger(v);\n\t\t\tcase AttributeType.Float: return castFloat(v);\n\t\t\tcase AttributeType.Boolean: return castBoolean(v);\n\t\t\tcase AttributeType.Date: return castDate(v);\n\t\t\tcase AttributeType.String: return castString(v);\n\t\t\tcase AttributeType.Raw: return castRaw(v);\n\t\t\tdefault: return v;\n\t\t}\n\t}\n}\n\n\nconst castInteger = (x: string | undefined) => {\n\tif (x) {\n\t\treturn parseInt(x, 10);\n\t} else {\n\t\treturn 0;\n\t}\n};\n\nconst castFloat = (x: string | undefined) => {\n\tif (x) {\n\t\treturn parseFloat(x);\n\t} else {\n\t\treturn 0;\n\t}\n};\n\nconst castBoolean = (x: string | undefined) => {\n\tif (x === undefined) { return false; }\n\tif (['TRUE', '1'].includes(x)) { return true; }\n\tif (['FALSE', '0'].includes(x)) { return false; }\n\treturn false;\n};\n\nconst castDate = (x: string | undefined) => {\n\treturn x ? parseDate(x) : null;\n};\n\nconst castRaw = (x: string | undefined) => {\n\treturn x;\n};\n\nconst castString = (x: string | undefined) => {\n\treturn x || '';\n};\n\nconst parseDate = (x: string) => {\n\tconst s = x.replace(/ /g, '');\n\tconst m = s.match(/(\\d{4}).(\\d{1,2}).(\\d{1,2}).+(\\d{2}):(\\d{2}):(\\d{2})/);\n\tif (m) {\n\t\tconst hourOffset = x.includes('오후') ? 12 : 0;\n\t\tconst year = parseInt(m[1], 10);\n\t\tconst month = parseInt(m[2], 10);\n\t\tconst day = parseInt(m[3], 10);\n\t\tconst hour = parseInt(m[4], 10) + hourOffset;\n\t\tconst minute = parseInt(m[5], 10);\n\t\tconst second = parseInt(m[6], 10);\n\t\treturn new Date(year, month - 1, day, hour, minute, second);\n\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const makeAttributes = (row: string[]) => row.map((cell) => Attribute.make(cell));\n","module.exports = require(\"js-yaml\");","module.exports = require(\"lodash\");","import { Attribute, AttributeValueType, AttributeType } from './Attribute';\nimport * as _ from 'lodash';\nimport { Cell } from './Cell';\n\nexport const INVALID_NUM_ID = -987654321;\nexport const INVALID_STR_ID = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport interface RecordType {\n\tid: number | string;\n\t[key: string]: AttributeValueType;\n}\n\nexport class Record {\n\tprivate readonly cells: Cell[];\n\tprivate readonly idcell: Cell;\n\n\tconstructor(cells: Cell[]) {\n\t\tthis.cells = cells;\n\t\tthis.idcell = cells.filter((cell) => cell.key === 'id')[0];\n\t}\n\n\tpublic get value() {\n\t\t// id를 제외한 값 채우기\n\t\t// id의 경우 필드 기본값과 다른것을 따라가니까\n\t\tconst obj: { [key: string]: AttributeValueType } = {};\n\t\tthis.cells\n\t\t\t.filter((cell) => cell.key !== 'id')\n\t\t\t.forEach((cell) => {\n\t\t\t\tobj[cell.key] = cell.value;\n\t\t\t});\n\n\t\tif (typeof this.idcell.raw === undefined || this.idcell.raw === '') {\n\t\t\tobj.id = this.getInvalidId();\n\t\t} else {\n\t\t\tobj.id = this.idcell.value;\n\t\t}\n\n\t\tconst record = obj as RecordType;\n\t\treturn record;\n\t}\n\n\tprivate getInvalidId(): number | string {\n\t\tconst idcell = this.idcell;\n\t\tif (idcell) {\n\t\t\tswitch (idcell.ty) {\n\t\t\t\tcase AttributeType.Integer:\n\t\t\t\tcase AttributeType.Float:\n\t\t\t\t\treturn INVALID_NUM_ID;\n\t\t\t\tcase AttributeType.String:\n\t\t\t\t\treturn INVALID_STR_ID;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn INVALID_NUM_ID;\n\t}\n}\n\nexport const makeRecord = (attrs: Attribute[], row: string[]) => {\n\tconst pairs = _.zip(attrs, row).map((pair) => ({\n\t\tattr: pair[0] as Attribute,\n\t\tdata: pair[1] as string,\n\t}));\n\tconst cells = pairs.map((pair) => new Cell(pair.attr, pair.data));\n\treturn new Record(cells);\n};\n","import Redis from 'ioredis';\nimport express from 'express';\nimport { findLatestVersion } from './helpers';\nimport * as P from './protocols';\nimport * as C from './controllers';\nimport { TableCache } from './cache';\nimport {\n\tgetJWTClient,\n\tServiceKey,\n\tGSheetDataSource,\n} from './datasource/gsheet';\nimport { OAuth2Client } from 'googleapis-common';\n\ninterface Options {\n\tmetadataSheetId: string;\n\tredis: Redis.Redis;\n\tdataPath: string;\n\tserviceKey: ServiceKey;\n}\n\nconst nadeshiko = (options: Options) => {\n\tconst router = express.Router();\n\n\tconst {\n\t\tmetadataSheetId,\n\t\tredis,\n\t\tdataPath,\n\t\tserviceKey,\n\t} = options;\n\n\tconst cache = new TableCache(redis);\n\n\tlet auth_inner: OAuth2Client;\n\tconst getAuth = async () => {\n\t\tif (!auth_inner) {\n\t\t\tauth_inner = await getJWTClient(serviceKey);\n\t\t}\n\t\treturn auth_inner;\n\t};\n\n\tconst getDataSource = async () => {\n\t\tconst auth = await getAuth();\n\t\treturn new GSheetDataSource(auth, metadataSheetId);\n\t};\n\n\n\tconst findVersion = async (req: express.Request) => {\n\t\tconst body = req.body ? req.body : {};\n\t\tconst { version } = body;\n\t\treturn version ? version : await findLatestVersion(dataPath);\n\t};\n\n\n\t// table\n\trouter.post('/tables/:table/sync', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst datasource = await getDataSource();\n\t\tconst ok = await C.syncTable(cache, datasource, table);\n\t\tres.json({ ok });\n\t});\n\n\trouter.get('/tables/:table', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst content = await C.getTable(cache, table);\n\t\tres.json(content);\n\t});\n\n\trouter.delete('/tables/:table', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst ok = await C.delTable(cache, table);\n\t\tres.json({ ok });\n\t});\n\n\t// record\n\trouter.get('/tables/:table/:id', async (req, res) => {\n\t\tconst { table, id } = await P.itemSchema.validate(req.params);\n\t\tconst item = await C.getRecord(cache, table, id);\n\t\tres.json(item);\n\t});\n\n\t// metadata\n\trouter.get('/metadata', async (req, res) => {\n\t\tconst metadata = await C.getMetadata(cache);\n\t\tres.json(metadata);\n\t});\n\n\t// version\n\trouter.get('/versions/', async (req, res) => {\n\t\tconst limit = parseInt(req.query.limit || '20', 10);\n\t\tif (isNaN(limit)) {\n\t\t\tthrow new Error(`invalid limit: ${req.query.limit}`);\n\t\t}\n\n\t\tconst versions = await C.getVersions(dataPath, limit);\n\t\tres.json(versions);\n\t});\n\n\trouter.get('/versions/:version', async (req, res) => {\n\t\tconst version: string = req.params.version;\n\t\tconst info = await C.getVersionInfo(dataPath, version);\n\t\tres.json({\n\t\t\tversion,\n\t\t\tmetadata: info.metadata,\n\t\t\tcontents: info.contents,\n\t\t});\n\t});\n\n\t// commands\n\trouter.post('/commands/fetch', async (req, res) => {\n\t\tconst datasource = await getDataSource();\n\t\tconst { version, metadata } = await C.fetchAll(datasource, dataPath);\n\t\tres.json({\n\t\t\tversion,\n\t\t\tmetadata,\n\t\t});\n\t});\n\n\trouter.post('/commands/load', async (req, res) => {\n\t\tconst version = await findVersion(req);\n\t\tconst { tables, metadata } = await C.loadAll(cache, dataPath, version);\n\t\tres.json({\n\t\t\tversion,\n\t\t\ttables,\n\t\t\tmetadata,\n\t\t});\n\t});\n\n\treturn router;\n};\nexport = nadeshiko;\n","module.exports = require(\"express\");","import path from 'path';\nimport dayjs from 'dayjs';\nimport fs from 'mz/fs';\n\nconst versionRegexp = /(\\d){8}-(\\d){6}/;\n\nexport const makeVersion = (d: Date) => {\n\tconst day = dayjs(d);\n\treturn day.format('YYYYMMDD-HHmmss');\n};\n\nexport const findLatestVersion = async (dataPath: string) => {\n\tconst list = await findVersions(dataPath);\n\tconst first: string | undefined = list[0];\n\treturn first;\n};\n\nexport const findVersions = async (dataPath: string) => {\n\tconst list = await readDirectory(dataPath);\n\treturn list.filter((x) => versionRegexp.test(x));\n};\n\nexport const filterVersions = (list: string[]) => {\n\treturn list.filter((x) => versionRegexp.test(x));\n};\n\nconst isMetadata = (x: string) => x.startsWith('metadata-');\n\nconst readDirectory = async (dataPath: string) => {\n\tconst list = await fs.readdir(dataPath);\n\treturn list.sort().reverse();\n};\n\nexport const findVersionInfo = async (dataPath: string, version: string) => {\n\tconst fp = path.resolve(dataPath, version);\n\tconst list = await readDirectory(fp);\n\treturn makeVersionInfo(list);\n};\n\nexport const makeVersionInfo = (list: string[]) => {\n\tconst names = list.map((x) => x.replace('.yaml', ''));\n\tconst metadataList = names.filter((x) => isMetadata(x));\n\tconst contentList = names.filter((x) => !isMetadata(x));\n\treturn {\n\t\tmetadata: metadataList,\n\t\tcontents: contentList,\n\t};\n};\n","module.exports = require(\"dayjs\");","import * as yup from 'yup';\r\n\r\ninterface TableReq {\r\n\ttable: string;\r\n}\r\n\r\nexport const tableSchema = yup.object().shape<TableReq>({\r\n\ttable: yup.string().required(),\r\n});\r\n\r\ninterface ItemReq {\r\n\ttable: string;\r\n\tid: number;\r\n}\r\n\r\nexport const itemSchema = yup.object().shape<ItemReq>({\r\n\ttable: yup.string().required(),\r\n\tid: yup.number().min(0).required(),\r\n});\r\n","module.exports = require(\"yup\");","import { fetch } from '../commands/fetch';\nimport * as fslib from '../helpers/fslib';\nimport { TableCache } from '../cache';\nimport { DataSource } from '../datasource';\nimport { makeTable } from '../sheets';\nimport { findVersions, findVersionInfo } from '../helpers';\n\nexport const getMetadata = async (cache: TableCache) => {\n\tconst metadata = await cache.loadMetadata();\n\treturn metadata;\n};\n\nexport const getTable = async (cache: TableCache, name: string) => {\n\tconst table = await cache.loadTable(name);\n\tif (table.length) {\n\t\treturn table;\n\t} else {\n\t\tthrow new Error('table not found');\n\t}\n};\n\nexport const delTable = async (cache: TableCache, name: string) => {\n\tconst result = await cache.dropTable(name);\n\tif (result) {\n\t\treturn true;\n\t} else {\n\t\tthrow new Error('no table deleted');\n\t}\n};\n\nexport const getRecord = async (cache: TableCache, name: string, id: number) => {\n\tconst item = await cache.get(name, id);\n\tif (item) {\n\t\treturn item;\n\t} else {\n\t\tthrow new Error('record not found');\n\t}\n};\n\nexport const syncTable = async (\n\tcache: TableCache,\n\tds: DataSource,\n\tname: string,\n) => {\n\tconst metadata = await cache.loadMetadata();\n\tconst ref = metadata.findReference(name);\n\tif (!ref) { throw new Error('reference not found'); }\n\n\tconst founds = await ds.fetchSheets([ref]);\n\tif (founds.length === 0) { throw new Error('sheet not found'); }\n\n\tconst found = founds[0];\n\tconst sheet = makeTable(found.name, found.values);\n\tawait cache.saveTable(sheet);\n\tawait cache.touchVersion();\n\treturn true;\n};\n\nexport const fetchAll = async (\n\tdatasource: DataSource,\n\tdataPath: string,\n) => {\n\t// TODO fetch를 권한 요청 없이 처리하는 방법?\n\tconst { version, metadata } = await fetch(datasource, dataPath);\n\treturn {\n\t\tversion,\n\t\tmetadata,\n\t};\n};\n\nexport const loadAll = async (\n\tcache: TableCache,\n\tdataPath: string,\n\tversion: string,\n) => {\n\tconst names = await fslib.findSheetNames(dataPath, version);\n\tconst tasks = names.map(async (name) => {\n\t\tconst table = await fslib.loadTable(dataPath, version, name);\n\t\tawait cache.saveTable(table);\n\t});\n\tawait Promise.all(tasks);\n\n\tconst metadata = await fslib.loadMetadata(dataPath, version);\n\tawait cache.saveMetadata(metadata);\n\n\treturn {\n\t\ttables: names,\n\t\tmetadata,\n\t};\n};\n\nexport const getVersions = async (dataPath: string, limit: number) => {\n\tconst versions = await findVersions(dataPath);\n\treturn versions.slice(0, limit);\n};\n\nexport const getVersionInfo = async (dataPath: string, version: string) => {\n\tconst info = await findVersionInfo(dataPath, version);\n\treturn info;\n};\n","import fs from 'mz/fs';\nimport path from 'path';\nimport * as _ from 'lodash';\nimport { makeVersion } from '../helpers';\nimport { DataSource } from '../datasource';\nimport {\n\tmakeReferences,\n\tmakeConstraints,\n\tMetadata,\n\tmakeTable,\n} from '../sheets';\n\n\nexport const fetch = async (\n\tds: DataSource,\n\tdataPath: string,\n) => {\n\tconst version = makeVersion(new Date());\n\n\tconst metadataList = await Promise.all([\n\t\tds.fetchReferences(),\n\t\tds.fetchConstraints(),\n\t]);\n\tconst references = makeReferences(metadataList[0]);\n\tconst constraints = makeConstraints(metadataList[1]);\n\tconst metadata = new Metadata(version, references, constraints);\n\n\tconst sheets = await ds.fetchSheets(references);\n\tconst tables = sheets.map((sheet) => {\n\t\treturn makeTable(sheet.name, sheet.values);\n\t});\n\n\tconst dstPath = path.resolve(dataPath, version);\n\tawait fs.mkdir(dstPath);\n\n\tawait metadata.save(dstPath);\n\tconst tasks = tables.map((table) => {\n\t\ttable.save(dstPath);\n\t});\n\tawait Promise.all(tasks);\n\n\treturn {\n\t\tversion,\n\t\tmetadata,\n\t};\n};\n\nconst main = async () => {\n\t// try {\n\t// \tawait fetch(...);\n\t// } catch (err) {\n\t// \tconsole.error(err);\n\t// }\n};\n\nif (require.main === module) {\n\tmain();\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export const getTableName = (r: string) => r.split('!')[0];\r\nexport const sanitizeRange = (r: string) => r.replace(/'/g, '');\r\n\r\nexport interface Sheet {\r\n\tname: string;\r\n\tvalues: string[][];\r\n}\r\n","export interface Reference {\r\n\ttable: string;\r\n\trange: string;\r\n\tsheet: string;\r\n}\r\n\r\nexport const toDataRange = (ref: Reference) => {\r\n\treturn `${ref.table}!${ref.range}`;\r\n};\r\n\r\nexport const makeReference = (row: string[]): Reference => {\r\n\treturn {\r\n\t\ttable: row[0],\r\n\t\trange: row[1],\r\n\t\tsheet: row[2],\r\n\t};\r\n};\r\n\r\nexport const makeReferences = (values: string[][]) => {\r\n\treturn values.map((row) => makeReference(row));\r\n};\r\n\r\n","export enum ConstraintType {\r\n\tForeignKey = 'fk',\r\n\tUnique = 'unique',\r\n}\r\n\r\nexport interface Constraint {\r\n\ttype: ConstraintType;\r\n\tfirstTable: string;\r\n\tfirstAttribute: string;\r\n\tsecondTable: string;\r\n\tsecondAttribute: string;\r\n}\r\n\r\nexport const makeConstraint = (row: string[]): Constraint => {\r\n\t// TODO check type value\r\n\treturn {\r\n\t\ttype: row[0] as ConstraintType,\r\n\t\tfirstTable: row[1],\r\n\t\tfirstAttribute: row[2],\r\n\t\tsecondTable: row[3],\r\n\t\tsecondAttribute: row[4],\r\n\t};\r\n};\r\n\r\nexport const makeConstraints = (values: string[][]): Constraint[] => {\r\n\treturn values.map((row) => makeConstraint(row));\r\n};\r\n\r\nexport class ConstraintTable {\r\n\tprivate readonly constraints: Constraint[];\r\n\r\n\tconstructor(constraints: Constraint[]) {\r\n\t\tthis.constraints = constraints;\r\n\t}\r\n}\r\n","import fs from 'mz/fs';\nimport path from 'path';\nimport yaml from 'js-yaml';\nimport { Constraint } from './Constraint';\nimport { Reference } from './Reference';\n\nexport class Metadata {\n\tpublic readonly version: string;\n\tpublic readonly references: Reference[];\n\tpublic readonly constraints: Constraint[];\n\n\tconstructor(\n\t\tversion: string,\n\t\treferences: Reference[],\n\t\tconstraints: Constraint[],\n\t) {\n\t\tthis.version = version;\n\t\tthis.references = references;\n\t\tthis.constraints = constraints;\n\t}\n\n\tpublic async save(dataPath: string) {\n\t\treturn Promise.all([\n\t\t\tthis.saveItems(dataPath, `metadata-references.yaml`, this.references),\n\t\t\tthis.saveItems(dataPath, `metadata-constraints.yaml`, this.constraints),\n\t\t]);\n\t}\n\n\tprivate async saveItems<T>(dataPath: string, filename: string, items: T[]) {\n\t\tconst text = yaml.dump(items);\n\t\tconst dst = path.resolve(dataPath, filename);\n\t\tawait fs.writeFile(dst, text);\n\t}\n\n\tpublic findReference(table: string) {\n\t\tconst founds = this.references.filter((x) => x.table === table);\n\t\treturn founds.length ? founds[0] : undefined;\n\t}\n}\n\n\n","import fs from 'mz/fs';\nimport path from 'path';\nimport yaml from 'js-yaml';\nimport { RecordType, makeRecord } from './Record';\nimport { makeAttributes } from './Attribute';\n\nexport class Table<T extends RecordType> {\n\tpublic readonly name: string;\n\tpublic readonly items: T[];\n\n\tconstructor(name: string, items: T[]) {\n\t\tthis.name = name;\n\t\tthis.items = items;\n\t}\n\n\tpublic async save(dataPath: string) {\n\t\tconst text = yaml.dump(this.items);\n\t\tconst filename = `${this.name}.yaml`;\n\t\tconst dst = path.resolve(dataPath, filename);\n\t\tawait fs.writeFile(dst, text);\n\t}\n\n\tpublic get length() { return this.items.length; }\n}\n\n\nexport const makeTable = (name: string, values: string[][]) => {\n\tconst firstRow = values[0];\n\tconst attrs = makeAttributes(firstRow);\n\n\tconst idattr = attrs.find((a) => a.name === 'id');\n\tif (!idattr) { throw new Error('id attribute not found'); }\n\n\tconst records = values.slice(1).map((row) => makeRecord(attrs, row));\n\tconst items = records.map((r) => r.value);\n\n\treturn new Table(name, items);\n};\n","import { Attribute } from './Attribute';\n\nexport class Cell {\n\tprivate readonly attr: Attribute;\n\tprivate readonly data: string;\n\n\tconstructor(attr: Attribute, data: string) {\n\t\tthis.attr = attr;\n\t\tthis.data = data;\n\t}\n\n\tpublic get value() { return this.attr.cast(this.data); }\n\tpublic get key() { return this.attr.name; }\n\tpublic get ty() { return this.attr.ty; }\n\tpublic get raw() { return this.data; }\n}\n","import fs from 'mz/fs';\nimport path from 'path';\nimport yaml from 'js-yaml';\nimport { RecordType, Table, Constraint, Reference, Metadata } from '../sheets';\n\nconst makeFilePath = (dataPath: string, version: string, filename: string) => {\n\tconst dbPath = path.resolve(dataPath, version);\n\treturn path.resolve(dbPath, filename);\n};\n\n\nconst readDataFile = async (dataPath: string, version: string, filename: string) => {\n\tconst fp = makeFilePath(dataPath, version, filename);\n\tconst buf = await fs.readFile(fp);\n\tconst text = buf.toString('utf8');\n\tconst content = yaml.load(text);\n\treturn content;\n};\n\n\nexport const findSheetNames = async (dataPath: string, version: string) => {\n\tconst dbPath = path.resolve(dataPath, version);\n\tconst list = (await fs.readdir(dbPath))\n\t\t.sort()\n\t\t.filter((x) => x.includes('.yaml'))\n\t\t.filter((x) => !x.startsWith('metadata-'))\n\t\t.map((x) => x.replace('.yaml', ''));\n\treturn list;\n};\n\nexport const loadTable = async <T extends RecordType>(dataPath: string, version: string, name: string) => {\n\tif (name.startsWith('metadata-')) {\n\t\treturn new Table(name, []);\n\t}\n\n\ttry {\n\t\tconst filename = `${name}.yaml`;\n\t\tconst items = await readDataFile(dataPath, version, filename) as T[];\n\t\treturn new Table(name, items);\n\n\t} catch (err) {\n\t\tconsole.error(err);\n\t\treturn new Table(name, []);\n\t}\n};\n\n\nexport const loadMetadata = async (dataPath: string, version: string) => {\n\tconst loadConstraints = async () => {\n\t\tconst filename = `metadata-constraints.yaml`;\n\t\tconst items = await readDataFile(dataPath, version, filename) as Constraint[];\n\t\treturn items;\n\t};\n\n\tconst loadReferences = async () => {\n\t\tconst filename = `metadata-references.yaml`;\n\t\tconst items = await readDataFile(dataPath, version, filename) as Reference[];\n\t\treturn items;\n\t};\n\n\tconst data = await Promise.all([\n\t\tawait loadReferences(),\n\t\tawait loadConstraints(),\n\t]);\n\n\treturn new Metadata(version, ...data);\n};\n","import Redis from 'ioredis';\nimport { RecordType, Table, Metadata, Reference, Constraint } from '../sheets';\nimport * as _ from 'lodash';\n\nconst makeTableKey = (table: string) => {\n\tconst key = `nadeshiko:${table}`;\n\treturn key;\n};\n\nconst makeConstraintsKey = () => {\n\tconst key = `nadeshiko:constraints`;\n\treturn key;\n};\n\nconst makeReferencesKey = () => {\n\tconst key = `nadeshiko:references`;\n\treturn key;\n};\n\nconst makeVersionKey = () => {\n\tconst key = `nadeshiko:version`;\n\treturn key;\n};\n\nconst compareRecordId = <T extends RecordType>(a: T, b: T) => {\n\tif (typeof a.id === 'number' && typeof b.id === 'number') {\n\t\treturn a.id - b.id;\n\t} else if (typeof a.id === 'string' && typeof b.id === 'string') {\n\t\treturn a.id.localeCompare(b.id);\n\t}\n\tthrow new Error(`invalid format: compare ${typeof a.id} and ${typeof b.id}`);\n};\n\nexport class TableCache {\n\tprivate readonly redis: Redis.Redis;\n\n\tconstructor(redis: Redis.Redis) {\n\t\tthis.redis = redis;\n\t}\n\n\tpublic async mset<T extends RecordType>(name: string, items: T[]) {\n\t\tif (items.length === 0) { return; }\n\t\tconst key = makeTableKey(name);\n\t\tconst args = _.flatten(items.map((item) => [\n\t\t\titem.id.toString(),\n\t\t\tJSON.stringify(item),\n\t\t]));\n\t\t// hmset 할때 배열을 풀어서 넣지 않으면\n\t\t// ioredis의 결과과 ioredis-mock의 결과가 달라진다\n\t\tawait this.redis.hmset(key, ...args);\n\t}\n\n\tpublic async mget<T extends RecordType>(name: string) {\n\t\tconst key = makeTableKey(name);\n\t\tconst founds: { [key: string]: string } = await this.redis.hgetall(key);\n\t\tconst values = _.values(founds);\n\t\tconst items = values.map((data) => {\n\t\t\tconst val = JSON.parse(data) as T;\n\t\t\treturn { val };\n\t\t});\n\t\treturn items.sort((a, b) => compareRecordId(a.val, b.val))\n\t\t\t.map((item) => item.val);\n\t}\n\n\tpublic async get<T extends RecordType>(name: string, id: number | string) {\n\t\tconst key = makeTableKey(name);\n\t\tconst field = id.toString();\n\t\tconst found = await this.redis.hget(key, field);\n\t\treturn found ? JSON.parse(found) as T : undefined;\n\t}\n\n\tpublic async saveTable<T extends RecordType>(table: Table<T>) {\n\t\tconst name = table.name;\n\t\tconst items = table.items;\n\n\t\tconst key = makeTableKey(name);\n\t\tawait this.redis.del(key);\n\t\tawait this.mset(name, items);\n\t}\n\n\tpublic async loadTable<T extends RecordType>(name: string) {\n\t\tconst items = await this.mget<T>(name);\n\t\treturn new Table(name, items);\n\t}\n\n\tpublic async dropTable(name: string) {\n\t\tconst key = makeTableKey(name);\n\t\tconst result = await this.redis.del(key);\n\t\treturn result ? true : false;\n\t}\n\n\tpublic async saveMetadata(metadata: Metadata) {\n\t\tawait this.redis.mset(\n\t\t\tmakeVersionKey(),\n\t\t\tmetadata.version,\n\t\t\tmakeReferencesKey(),\n\t\t\tJSON.stringify(metadata.references),\n\t\t\tmakeConstraintsKey(),\n\t\t\tJSON.stringify(metadata.constraints),\n\t\t);\n\t}\n\n\tpublic async touchVersion() {\n\t\tconst key = makeVersionKey();\n\t\tconst curr = await this.redis.get(key);\n\t\tif (curr) {\n\t\t\tif (!curr.endsWith('-dirty')) {\n\t\t\t\tconst next = curr + '-dirty';\n\t\t\t\tawait this.redis.set(key, next);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async loadMetadata() {\n\t\tconst versionData = await this.redis.get(makeVersionKey());\n\t\tconst referenceData = await this.redis.get(makeReferencesKey());\n\t\tconst constraintData = await this.redis.get(makeConstraintsKey());\n\t\tif (!versionData || !referenceData || !constraintData) {\n\t\t\treturn new Metadata('NULL', [], []);\n\t\t}\n\n\t\tconst references = JSON.parse(referenceData) as Reference[];\n\t\tconst constraints = JSON.parse(constraintData) as Constraint[];\n\t\treturn new Metadata(versionData, references, constraints);\n\t}\n\n\tpublic async dropMetadata() {\n\t\tawait this.redis.del(\n\t\t\tmakeVersionKey(),\n\t\t\tmakeReferencesKey(),\n\t\t\tmakeConstraintsKey(),\n\t\t);\n\t}\n}\n","import { google } from 'googleapis';\r\nimport {\r\n\tsanitizeRange,\r\n\tgetTableName,\r\n\tReference,\r\n\ttoDataRange,\r\n\tSheet,\r\n} from '../sheets';\r\nimport { OAuth2Client } from 'googleapis-common';\r\nimport * as _ from 'lodash';\r\nimport { DataSource } from './base';\r\n\r\nexport class GSheetDataSource implements DataSource {\r\n\tprivate readonly auth: OAuth2Client;\r\n\tprivate readonly metadataSheetId: string;\r\n\r\n\tconstructor(auth: OAuth2Client, metadataSheetId: string) {\r\n\t\tthis.auth = auth;\r\n\t\tthis.metadataSheetId = metadataSheetId;\r\n\t}\r\n\r\n\tpublic async fetchReferences(): Promise<string[][]> {\r\n\t\tconst ref: Reference = {\r\n\t\t\ttable: 'metadata-references',\r\n\t\t\trange: 'A2:C',\r\n\t\t\tsheet: this.metadataSheetId,\r\n\t\t};\r\n\t\tconst founds = await this.fetchSheets([ref]);\r\n\t\treturn founds[0].values;\r\n\t}\r\n\r\n\tpublic async fetchConstraints(): Promise<string[][]> {\r\n\t\tconst ref: Reference = {\r\n\t\t\ttable: 'metadata-constraints',\r\n\t\t\trange: 'A2:E',\r\n\t\t\tsheet: this.metadataSheetId,\r\n\t\t};\r\n\t\tconst founds = await this.fetchSheets([ref]);\r\n\t\treturn founds[0].values;\r\n\t}\r\n\r\n\tpublic async fetchSheets(refs: Reference[]): Promise<Sheet[]> {\r\n\t\tconst groups = _.groupBy(refs, (x: Reference) => x.table);\r\n\t\tconst keys = _.keys(groups);\r\n\t\tconst tasks = keys.map(async (key) => {\r\n\t\t\tconst refs = groups[key];\r\n\t\t\tconst sheetId = refs[0].sheet;\r\n\t\t\tconst founds = await this.fetch(sheetId, refs);\r\n\t\t\treturn founds;\r\n\t\t});\r\n\t\tconst founds = _.flatten(await Promise.all(tasks));\r\n\t\treturn founds;\r\n\t}\r\n\r\n\tprivate async fetch(sheetId: string, refs: Reference[]) {\r\n\t\tconst ranges = refs.map((r) => toDataRange(r));\r\n\t\tconst sheets = google.sheets({ version: 'v4', auth: this.auth });\r\n\t\tconst resp = await sheets.spreadsheets.values.batchGet({\r\n\t\t\tspreadsheetId: sheetId,\r\n\t\t\tranges,\r\n\t\t});\r\n\t\tif (resp.status !== 200) { throw new Error(`batchGet failed: ${resp.statusText}`); }\r\n\t\tif (!resp.data.valueRanges) { throw new Error(`no values found`); }\r\n\r\n\t\tconst founds = resp.data.valueRanges.map((found) => {\r\n\t\t\tconst range = sanitizeRange(found.range!);\r\n\t\t\tconst name = getTableName(range);\r\n\t\t\tconst values = found.values!;\r\n\t\t\treturn { name, values };\r\n\t\t});\r\n\t\treturn founds;\r\n\t}\r\n}\r\n\r\n\r\nexport interface ServiceKey {\r\n\t// type: string;\r\n\t// project_id: string;\r\n\t// private_key_id: string;\r\n\tprivate_key: string;\r\n\tclient_email: string;\r\n\t// client_id: string;\r\n\t// auth_uri: string;\r\n\t// token_uri: string;\r\n\t// auth_provider_x509_cert_url: string;\r\n\t// client_x509_cert_url: string;\r\n}\r\n\r\nexport const getJWTClient = async (serviceKey: ServiceKey): Promise<OAuth2Client> => {\r\n\t// http://isd-soft.com/tech_blog/accessing-google-apis-using-service-account-node-js/\r\n\tconst client = new google.auth.JWT(\r\n\t\tserviceKey.client_email,\r\n\t\tundefined,\r\n\t\tserviceKey.private_key,\r\n\t\t['https://www.googleapis.com/auth/spreadsheets'],\r\n\t);\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tclient.authorize((err, tokens) => {\r\n\t\t\tif (err) { reject(err); }\r\n\t\t\telse { resolve(client); }\r\n\t\t});\r\n\t});\r\n};\r\n","module.exports = require(\"googleapis\");"],"sourceRoot":""}