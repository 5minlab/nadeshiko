{"version":3,"sources":["webpack://nadeshiko/webpack/universalModuleDefinition","webpack://nadeshiko/webpack/bootstrap","webpack://nadeshiko/external \"path\"","webpack://nadeshiko/external \"mz/fs\"","webpack://nadeshiko/./src/sheets/index.ts","webpack://nadeshiko/./src/helpers/index.ts","webpack://nadeshiko/./src/sheets/Attribute.ts","webpack://nadeshiko/external \"js-yaml\"","webpack://nadeshiko/external \"lodash\"","webpack://nadeshiko/./src/cache/index.ts","webpack://nadeshiko/./src/controllers/index.ts","webpack://nadeshiko/./src/sheets/Record.ts","webpack://nadeshiko/./src/index.ts","webpack://nadeshiko/./src/router.ts","webpack://nadeshiko/external \"express\"","webpack://nadeshiko/./src/helpers/versions.ts","webpack://nadeshiko/external \"dayjs\"","webpack://nadeshiko/./src/protocols/index.ts","webpack://nadeshiko/external \"yup\"","webpack://nadeshiko/./src/commands/fetch.ts","webpack://nadeshiko/(webpack)/buildin/module.js","webpack://nadeshiko/./src/sheets/Sheet.ts","webpack://nadeshiko/./src/sheets/Reference.ts","webpack://nadeshiko/./src/sheets/Constraint.ts","webpack://nadeshiko/./src/sheets/Metadata.ts","webpack://nadeshiko/./src/sheets/Table.ts","webpack://nadeshiko/./src/sheets/Cell.ts","webpack://nadeshiko/./src/helpers/fslib.ts","webpack://nadeshiko/./src/datasource/gsheet.ts","webpack://nadeshiko/external \"googleapis\""],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__export","AttributeType","attributeList","ty","Integer","prefix","Float","String","Boolean","Date","Raw","Attribute","this","make","length","Error","founds","filter","pair","startsWith","found","replace","cast","v","castInteger","castFloat","castBoolean","castDate","castString","castRaw","x","parseInt","parseFloat","undefined","includes","parseDate","match","hourOffset","year","month","day","hour","minute","second","makeAttributes","row","map","cell","sheets_1","lodash_1","__importDefault","makeTableKey","table","makeConstraintsKey","makeReferencesKey","makeVersionKey","TableCache","redis","_this","mset","items","args","default","flatten","item","id","toString","JSON","stringify","_a","hmset","apply","concat","_b","sent","mget","hgetall","values","data","val","parse","sort","a","b","localeCompare","compareRecordId","field","hget","saveTable","del","loadTable","Table","dropTable","saveMetadata","metadata","version","references","constraints","touchVersion","curr","endsWith","next","set","loadMetadata","versionData","referenceData","constraintData","Metadata","dropMetadata","fetch_1","fslib","__importStar","helpers_1","getMetadata","cache","__awaiter","getTable","delTable","getRecord","syncTable","ds","ref","findReference","fetchSheets","sheet","makeTable","fetchAll","datasource","dataPath","fetch","loadAll","findSheetNames","names","tasks","Promise","all","tables","getVersions","limit","findVersions","slice","getVersionInfo","findVersionInfo","Attribute_1","_","Cell_1","INVALID_NUM_ID","INVALID_STR_ID","Record","cells","idcell","obj","forEach","raw","getInvalidId","makeRecord","attrs","zip","attr","Cell","router_1","makeRouter","cache_1","cache_2","C","Controller","Nadeshiko","express_1","P","gsheet_1","options","auth_inner","router","Router","metadataSheetId","serviceKey","getDataSource","getJWTClient","auth","GSheetDataSource","findVersion","req","body","findLatestVersion","post","res","tableSchema","validate","params","ok","json","content","delete","itemSchema","query","isNaN","versions","info","contents","path_1","dayjs_1","fs_1","versionRegexp","makeVersion","format","list","readDirectory","test","filterVersions","isMetadata","readdir","reverse","fp","resolve","makeVersionInfo","yup","shape","string","required","mixed","fetchReferences","fetchConstraints","metadataList","makeReferences","makeConstraints","sheets","dstPath","mkdir","save","webpackPolyfill","deprecate","paths","children","getTableName","split","sanitizeRange","toDataRange","range","makeReference","ConstraintType","makeConstraint","type","firstTable","firstAttribute","secondTable","secondAttribute","ConstraintTable","js_yaml_1","saveItems","filename","text","dump","dst","writeFile","Record_1","firstRow","records","find","newAttrs_1","idx","newRow","readDataFile","dbPath","makeFilePath","readFile","buf","load","console","error","err_1","loadConstraints","loadReferences","_d","_c","googleapis_1","refs","groups","groupBy","keys","sheetId","ranges","google","spreadsheets","batchGet","spreadsheetId","resp","status","statusText","valueRanges","client","JWT","client_email","private_key","reject","authorize","err","tokens"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nadeshiko\"] = factory();\n\telse\n\t\troot[\"nadeshiko\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"path\");","module.exports = require(\"mz/fs\");","export * from './Sheet';\r\nexport * from './Reference';\r\nexport * from './Constraint';\r\nexport * from './Attribute';\r\nexport * from './Metadata';\r\nexport * from './Table';\r\nexport * from './Record';\r\n","export * from './versions';\r\n","export enum AttributeType {\r\n\tInteger,\r\n\tFloat,\r\n\tString,\r\n\tBoolean,\r\n\tDate,\r\n\tRaw,\r\n}\r\n\r\nconst attributeList: Array<{ ty: AttributeType, prefix: string }> = [\r\n\t{ ty: AttributeType.Integer, prefix: 'i_' },\r\n\t{ ty: AttributeType.Float, prefix: 'f_' },\r\n\t{ ty: AttributeType.String, prefix: 's_' },\r\n\t{ ty: AttributeType.Boolean, prefix: 'b_' },\r\n\t{ ty: AttributeType.Date, prefix: 'd_' },\r\n\t{ ty: AttributeType.Raw, prefix: 'r_' },\r\n];\r\n\r\nexport type AttributeValueType = (\r\n\tnumber | boolean | Date | string | null | undefined\r\n);\r\n\r\nexport class Attribute {\r\n\tpublic readonly ty: AttributeType;\r\n\tpublic readonly name: string;\r\n\r\n\tconstructor(ty: AttributeType, name: string) {\r\n\t\tthis.ty = ty;\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic static make(s: string) {\r\n\t\tif (!s.length) { throw new Error('blank attribute name'); }\r\n\t\tconst founds = attributeList.filter((pair) => s.startsWith(pair.prefix));\r\n\t\tif (founds.length > 0) {\r\n\t\t\tconst found = founds[0];\r\n\t\t\treturn new Attribute(found.ty, s.replace(found.prefix, ''));\r\n\t\t} else {\r\n\t\t\treturn new Attribute(AttributeType.Raw, s);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic cast(v: string | undefined) {\r\n\t\tswitch (this.ty) {\r\n\t\t\tcase AttributeType.Integer: return castInteger(v);\r\n\t\t\tcase AttributeType.Float: return castFloat(v);\r\n\t\t\tcase AttributeType.Boolean: return castBoolean(v);\r\n\t\t\tcase AttributeType.Date: return castDate(v);\r\n\t\t\tcase AttributeType.String: return castString(v);\r\n\t\t\tcase AttributeType.Raw: return castRaw(v);\r\n\t\t\tdefault: return v;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nconst castInteger = (x: string | undefined) => {\r\n\tif (x) {\r\n\t\treturn parseInt(x, 10);\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n};\r\n\r\nconst castFloat = (x: string | undefined) => {\r\n\tif (x) {\r\n\t\treturn parseFloat(x);\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n};\r\n\r\nconst castBoolean = (x: string | undefined) => {\r\n\tif (x === undefined) { return false; }\r\n\tif (['TRUE', '1'].includes(x)) { return true; }\r\n\tif (['FALSE', '0'].includes(x)) { return false; }\r\n\treturn false;\r\n};\r\n\r\nconst castDate = (x: string | undefined) => {\r\n\treturn x ? parseDate(x) : null;\r\n};\r\n\r\nconst castRaw = (x: string | undefined) => {\r\n\treturn x;\r\n};\r\n\r\nconst castString = (x: string | undefined) => {\r\n\treturn x || '';\r\n};\r\n\r\nconst parseDate = (x: string) => {\r\n\tconst s = x.replace(/ /g, '');\r\n\tconst m = s.match(/(\\d{4}).(\\d{1,2}).(\\d{1,2}).+(\\d{2}):(\\d{2}):(\\d{2})/);\r\n\tif (m) {\r\n\t\tconst hourOffset = x.includes('오후') ? 12 : 0;\r\n\t\tconst year = parseInt(m[1], 10);\r\n\t\tconst month = parseInt(m[2], 10);\r\n\t\tconst day = parseInt(m[3], 10);\r\n\t\tconst hour = parseInt(m[4], 10) + hourOffset;\r\n\t\tconst minute = parseInt(m[5], 10);\r\n\t\tconst second = parseInt(m[6], 10);\r\n\t\treturn new Date(year, month - 1, day, hour, minute, second);\r\n\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport const makeAttributes = (row: string[]) => row.map((cell) => Attribute.make(cell));\r\n","module.exports = require(\"js-yaml\");","module.exports = require(\"lodash\");","import Redis from 'ioredis';\nimport { RecordType, Table, Metadata, Reference, Constraint } from '../sheets';\nimport _ from 'lodash';\n\nexport const makeTableKey = (prefix: string, table: string) => {\n\tconst key = `${prefix}:${table}`;\n\treturn key;\n};\n\nconst makeConstraintsKey = (prefix: string) => {\n\tconst key = `${prefix}:constraints`;\n\treturn key;\n};\n\nconst makeReferencesKey = (prefix: string) => {\n\tconst key = `${prefix}:references`;\n\treturn key;\n};\n\nconst makeVersionKey = (prefix: string) => {\n\tconst key = `${prefix}:version`;\n\treturn key;\n};\n\nconst compareRecordId = <T extends RecordType>(a: T, b: T) => {\n\tif (typeof a.id === 'number' && typeof b.id === 'number') {\n\t\treturn a.id - b.id;\n\t} else if (typeof a.id === 'string' && typeof b.id === 'string') {\n\t\treturn a.id.localeCompare(b.id);\n\t}\n\tthrow new Error(`invalid format: compare ${typeof a.id} and ${typeof b.id}`);\n};\n\nexport class TableCache {\n\tprivate readonly redis: Redis.Redis;\n\tprivate readonly prefix: string;\n\n\tconstructor(redis: Redis.Redis, prefix: string) {\n\t\tthis.redis = redis;\n\t\tthis.prefix = prefix;\n\t}\n\n\tprivate makeTableKey = (table: string) => makeTableKey(this.prefix, table);\n\tprivate makeConstraintsKey = () => makeConstraintsKey(this.prefix);\n\tprivate makeReferencesKey = () => makeReferencesKey(this.prefix);\n\tprivate makeVersionKey = () => makeVersionKey(this.prefix);\n\n\tpublic async mset<T extends RecordType>(name: string, items: T[]) {\n\t\tif (items.length === 0) { return; }\n\t\tconst key = this.makeTableKey(name);\n\t\tconst args = _.flatten(items.map((item) => [\n\t\t\titem.id.toString(),\n\t\t\tJSON.stringify(item),\n\t\t]));\n\t\t// hmset 할때 배열을 풀어서 넣지 않으면\n\t\t// ioredis의 결과과 ioredis-mock의 결과가 달라진다\n\t\tawait this.redis.hmset(key, ...args);\n\t}\n\n\tpublic async mget<T extends RecordType>(name: string) {\n\t\tconst key = this.makeTableKey(name);\n\t\tconst founds: { [key: string]: string } = await this.redis.hgetall(key);\n\t\tconst values = _.values(founds);\n\t\tconst items = values.map((data) => {\n\t\t\tconst val = JSON.parse(data) as T;\n\t\t\treturn { val };\n\t\t});\n\t\treturn items.sort((a, b) => compareRecordId(a.val, b.val))\n\t\t\t.map((item) => item.val);\n\t}\n\n\tpublic async get<T extends RecordType>(name: string, id: number | string) {\n\t\tconst key = this.makeTableKey(name);\n\t\tconst field = id.toString();\n\t\tconst found = await this.redis.hget(key, field);\n\t\treturn found ? JSON.parse(found) as T : undefined;\n\t}\n\n\tpublic async saveTable<T extends RecordType>(table: Table<T>) {\n\t\tconst name = table.name;\n\t\tconst items = table.items;\n\n\t\tconst key = this.makeTableKey(name);\n\t\tawait this.redis.del(key);\n\t\tawait this.mset(name, items);\n\t}\n\n\tpublic async loadTable<T extends RecordType>(name: string) {\n\t\tconst items = await this.mget<T>(name);\n\t\treturn new Table(name, items);\n\t}\n\n\tpublic async dropTable(name: string) {\n\t\tconst key = this.makeTableKey(name);\n\t\tconst result = await this.redis.del(key);\n\t\treturn result ? true : false;\n\t}\n\n\tpublic async saveMetadata(metadata: Metadata) {\n\t\tawait this.redis.mset(\n\t\t\tthis.makeVersionKey(),\n\t\t\tmetadata.version,\n\t\t\tthis.makeReferencesKey(),\n\t\t\tJSON.stringify(metadata.references),\n\t\t\tthis.makeConstraintsKey(),\n\t\t\tJSON.stringify(metadata.constraints),\n\t\t);\n\t}\n\n\tpublic async touchVersion() {\n\t\tconst key = this.makeVersionKey();\n\t\tconst curr = await this.redis.get(key);\n\t\tif (curr) {\n\t\t\tif (!curr.endsWith('-dirty')) {\n\t\t\t\tconst next = curr + '-dirty';\n\t\t\t\tawait this.redis.set(key, next);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async loadMetadata() {\n\t\tconst versionData = await this.redis.get(this.makeVersionKey());\n\t\tconst referenceData = await this.redis.get(this.makeReferencesKey());\n\t\tconst constraintData = await this.redis.get(this.makeConstraintsKey());\n\t\tif (!versionData || !referenceData || !constraintData) {\n\t\t\treturn new Metadata('NULL', [], []);\n\t\t}\n\n\t\tconst references = JSON.parse(referenceData) as Reference[];\n\t\tconst constraints = JSON.parse(constraintData) as Constraint[];\n\t\treturn new Metadata(versionData, references, constraints);\n\t}\n\n\tpublic async dropMetadata() {\n\t\tawait this.redis.del(\n\t\t\tthis.makeVersionKey(),\n\t\t\tthis.makeReferencesKey(),\n\t\t\tthis.makeConstraintsKey(),\n\t\t);\n\t}\n}\n","import { fetch } from '../commands/fetch';\nimport * as fslib from '../helpers/fslib';\nimport { TableCache } from '../cache';\nimport { DataSource } from '../datasource';\nimport { makeTable, Metadata, Table, RecordType } from '../sheets';\nimport { findVersions, findVersionInfo } from '../helpers';\n\nexport const getMetadata = async (cache: TableCache): Promise<Metadata> => {\n\tconst metadata = await cache.loadMetadata();\n\treturn metadata;\n};\n\nexport const getTable = async <T extends RecordType>(\n\tcache: TableCache,\n\tname: string,\n): Promise<Table<T>> => {\n\tconst table = await cache.loadTable<T>(name);\n\tif (table.length) {\n\t\treturn table;\n\t} else {\n\t\tthrow new Error('table not found');\n\t}\n};\n\nexport const delTable = async (cache: TableCache, name: string) => {\n\tconst result = await cache.dropTable(name);\n\tif (result) {\n\t\treturn true;\n\t} else {\n\t\tthrow new Error('no table deleted');\n\t}\n};\n\nexport const getRecord = async (cache: TableCache, name: string, id: number | string) => {\n\tconst item = await cache.get(name, id);\n\tif (item) {\n\t\treturn item;\n\t} else {\n\t\tthrow new Error('record not found');\n\t}\n};\n\nexport const syncTable = async (\n\tcache: TableCache,\n\tds: DataSource,\n\tname: string,\n) => {\n\tconst metadata = await cache.loadMetadata();\n\tconst ref = metadata.findReference(name);\n\tif (!ref) { throw new Error('reference not found'); }\n\n\tconst founds = await ds.fetchSheets([ref]);\n\tif (founds.length === 0) { throw new Error('sheet not found'); }\n\n\tconst found = founds[0];\n\tconst sheet = makeTable(found.name, found.values);\n\tawait cache.saveTable(sheet);\n\tawait cache.touchVersion();\n\treturn true;\n};\n\nexport const fetchAll = async (\n\tdatasource: DataSource,\n\tdataPath: string,\n) => {\n\t// TODO fetch를 권한 요청 없이 처리하는 방법?\n\tconst { version, metadata } = await fetch(datasource, dataPath);\n\treturn {\n\t\tversion,\n\t\tmetadata,\n\t};\n};\n\nexport const loadAll = async (\n\tcache: TableCache,\n\tdataPath: string,\n\tversion: string,\n) => {\n\tconst names = await fslib.findSheetNames(dataPath, version);\n\tconst tasks = names.map(async (name) => {\n\t\tconst table = await fslib.loadTable(dataPath, version, name);\n\t\tawait cache.saveTable(table);\n\t});\n\tawait Promise.all(tasks);\n\n\tconst metadata = await fslib.loadMetadata(dataPath, version);\n\tawait cache.saveMetadata(metadata);\n\n\treturn {\n\t\ttables: names,\n\t\tmetadata,\n\t};\n};\n\nexport const getVersions = async (dataPath: string, limit: number) => {\n\tconst versions = await findVersions(dataPath);\n\treturn versions.slice(0, limit);\n};\n\nexport const getVersionInfo = async (dataPath: string, version: string) => {\n\tconst info = await findVersionInfo(dataPath, version);\n\treturn info;\n};\n","import { Attribute, AttributeValueType, AttributeType } from './Attribute';\nimport * as _ from 'lodash';\nimport { Cell } from './Cell';\n\nexport const INVALID_NUM_ID = -987654321;\nexport const INVALID_STR_ID = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport type RecordType = {\n\tid: number | string;\n} & {\n\t[key: string]: AttributeValueType;\n};\n\nexport class Record {\n\tprivate readonly cells: Cell[];\n\tprivate readonly idcell: Cell;\n\n\tconstructor(cells: Cell[]) {\n\t\tthis.cells = cells;\n\t\tthis.idcell = cells.filter((cell) => cell.key === 'id')[0];\n\t}\n\n\tpublic get value() {\n\t\t// id를 제외한 값 채우기\n\t\t// id의 경우 필드 기본값과 다른것을 따라가니까\n\t\tconst obj: { [key: string]: AttributeValueType } = {};\n\t\tthis.cells\n\t\t\t.filter((cell) => cell.key !== 'id')\n\t\t\t.forEach((cell) => {\n\t\t\t\tobj[cell.key] = cell.value;\n\t\t\t});\n\n\t\tif (typeof this.idcell.raw === undefined || this.idcell.raw === '') {\n\t\t\tobj.id = this.getInvalidId();\n\t\t} else {\n\t\t\tobj.id = this.idcell.value;\n\t\t}\n\n\t\tconst record = obj as RecordType;\n\t\treturn record;\n\t}\n\n\tprivate getInvalidId(): number | string {\n\t\tconst idcell = this.idcell;\n\t\tif (idcell) {\n\t\t\tswitch (idcell.ty) {\n\t\t\t\tcase AttributeType.Integer:\n\t\t\t\tcase AttributeType.Float:\n\t\t\t\t\treturn INVALID_NUM_ID;\n\t\t\t\tcase AttributeType.String:\n\t\t\t\t\treturn INVALID_STR_ID;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn INVALID_NUM_ID;\n\t}\n}\n\nexport const makeRecord = (attrs: Attribute[], row: string[]) => {\n\tconst pairs = _.zip(attrs, row).map((pair) => ({\n\t\tattr: pair[0] as Attribute,\n\t\tdata: pair[1] as string,\n\t}));\n\tconst cells = pairs.map((pair) => new Cell(pair.attr, pair.data));\n\treturn new Record(cells);\n};\n","export {\n\tmakeRouter,\n} from './router';\n\nexport {\n\tTableCache,\n} from './cache';\n\nimport Redis from 'ioredis';\n\nimport {\n\tTableCache,\n\tmakeTableKey,\n} from './cache';\n\nimport { RecordType } from './sheets';\n\nimport * as C from './controllers';\nexport const Controller = C;\n\nexport class Nadeshiko {\n\tprivate readonly prefix: string;\n\tprivate readonly cache: TableCache;\n\n\tconstructor(redis: Redis.Redis, prefix: string) {\n\t\tthis.prefix = prefix;\n\t\tthis.cache = new TableCache(redis, prefix);\n\t}\n\n\tpublic key(ty: string) {\n\t\treturn makeTableKey(this.prefix, ty);\n\t}\n\n\tpublic async mget<T extends RecordType>(ty: string): Promise<T[]> {\n\t\tconst result = await C.getTable(this.cache, ty);\n\t\treturn result.items as T[];\n\t}\n\n\tpublic async get<T extends RecordType>(ty: string, id: number | string) {\n\t\tconst result = await C.getRecord(this.cache, ty, id);\n\t\treturn result as T;\n\t}\n}\n","import Redis from 'ioredis';\nimport express from 'express';\nimport { findLatestVersion } from './helpers';\nimport * as P from './protocols';\nimport * as C from './controllers';\nimport { TableCache } from './cache';\nimport {\n\tgetJWTClient,\n\tServiceKey,\n\tGSheetDataSource,\n} from './datasource/gsheet';\nimport { OAuth2Client } from 'googleapis-common';\n\ninterface Options {\n\tmetadataSheetId: string;\n\tredis: Redis.Redis;\n\tdataPath: string;\n\tserviceKey: ServiceKey;\n\tprefix?: string;\n}\n\nexport const makeRouter = (options: Options): express.Router => {\n\tconst router = express.Router();\n\n\tconst {\n\t\tmetadataSheetId,\n\t\tredis,\n\t\tdataPath,\n\t\tserviceKey,\n\t\tprefix,\n\t} = options;\n\n\tconst cache = new TableCache(redis, prefix || 'nadeshiko');\n\n\tlet auth_inner: OAuth2Client;\n\tconst getAuth = async () => {\n\t\tif (!auth_inner) {\n\t\t\tauth_inner = await getJWTClient(serviceKey);\n\t\t}\n\t\treturn auth_inner;\n\t};\n\n\tconst getDataSource = async () => {\n\t\tconst auth = await getAuth();\n\t\treturn new GSheetDataSource(auth, metadataSheetId);\n\t};\n\n\n\tconst findVersion = async (req: express.Request) => {\n\t\tconst body = req.body ? req.body : {};\n\t\tconst { version } = body;\n\t\treturn version ? version : await findLatestVersion(dataPath);\n\t};\n\n\n\t// table\n\trouter.post('/tables/:table/sync', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst datasource = await getDataSource();\n\t\tconst ok = await C.syncTable(cache, datasource, table);\n\t\tres.json({ ok });\n\t});\n\n\trouter.get('/tables/:table', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst content = await C.getTable(cache, table);\n\t\tres.json(content);\n\t});\n\n\trouter.delete('/tables/:table', async (req, res) => {\n\t\tconst { table } = await P.tableSchema.validate(req.params);\n\t\tconst ok = await C.delTable(cache, table);\n\t\tres.json({ ok });\n\t});\n\n\t// record\n\trouter.get('/tables/:table/:id', async (req, res) => {\n\t\tconst { table, id } = await P.itemSchema.validate(req.params);\n\t\tconst item = await C.getRecord(cache, table, id);\n\t\tres.json(item);\n\t});\n\n\t// metadata\n\trouter.get('/metadata', async (req, res) => {\n\t\tconst metadata = await C.getMetadata(cache);\n\t\tres.json(metadata);\n\t});\n\n\t// version\n\trouter.get('/versions/', async (req, res) => {\n\t\tconst limit = parseInt(req.query.limit || '20', 10);\n\t\tif (isNaN(limit)) {\n\t\t\tthrow new Error(`invalid limit: ${req.query.limit}`);\n\t\t}\n\n\t\tconst versions = await C.getVersions(dataPath, limit);\n\t\tres.json(versions);\n\t});\n\n\trouter.get('/versions/:version', async (req, res) => {\n\t\tconst version: string = req.params.version;\n\t\tconst info = await C.getVersionInfo(dataPath, version);\n\t\tres.json({\n\t\t\tversion,\n\t\t\tmetadata: info.metadata,\n\t\t\tcontents: info.contents,\n\t\t});\n\t});\n\n\t// commands\n\trouter.post('/commands/fetch', async (req, res) => {\n\t\tconst datasource = await getDataSource();\n\t\tconst { version, metadata } = await C.fetchAll(datasource, dataPath);\n\t\tres.json({\n\t\t\tversion,\n\t\t\tmetadata,\n\t\t});\n\t});\n\n\trouter.post('/commands/load', async (req, res) => {\n\t\tconst version = await findVersion(req);\n\t\tconst { tables, metadata } = await C.loadAll(cache, dataPath, version);\n\t\tres.json({\n\t\t\tversion,\n\t\t\ttables,\n\t\t\tmetadata,\n\t\t});\n\t});\n\n\treturn router;\n};\n\n\n// export = nadeshiko;\n","module.exports = require(\"express\");","import path from 'path';\r\nimport dayjs from 'dayjs';\r\nimport fs from 'mz/fs';\r\n\r\nconst versionRegexp = /(\\d){8}-(\\d){6}/;\r\n\r\nexport const makeVersion = (d: Date) => {\r\n\tconst day = dayjs(d);\r\n\treturn day.format('YYYYMMDD-HHmmss');\r\n};\r\n\r\nexport const findLatestVersion = async (dataPath: string) => {\r\n\tconst list = await findVersions(dataPath);\r\n\tconst first: string | undefined = list[0];\r\n\treturn first;\r\n};\r\n\r\nexport const findVersions = async (dataPath: string) => {\r\n\tconst list = await readDirectory(dataPath);\r\n\treturn list.filter((x) => versionRegexp.test(x));\r\n};\r\n\r\nexport const filterVersions = (list: string[]) => {\r\n\treturn list.filter((x) => versionRegexp.test(x));\r\n};\r\n\r\nconst isMetadata = (x: string) => x.startsWith('metadata-');\r\n\r\nconst readDirectory = async (dataPath: string) => {\r\n\tconst list = await fs.readdir(dataPath);\r\n\treturn list.sort().reverse();\r\n};\r\n\r\nexport const findVersionInfo = async (dataPath: string, version: string) => {\r\n\tconst fp = path.resolve(dataPath, version);\r\n\tconst list = await readDirectory(fp);\r\n\treturn makeVersionInfo(list);\r\n};\r\n\r\nexport const makeVersionInfo = (list: string[]) => {\r\n\tconst names = list.map((x) => x.replace('.yaml', ''));\r\n\tconst metadataList = names.filter((x) => isMetadata(x));\r\n\tconst contentList = names.filter((x) => !isMetadata(x));\r\n\treturn {\r\n\t\tmetadata: metadataList,\r\n\t\tcontents: contentList,\r\n\t};\r\n};\r\n","module.exports = require(\"dayjs\");","import * as yup from 'yup';\r\n\r\ninterface TableReq {\r\n\ttable: string;\r\n}\r\n\r\nexport const tableSchema = yup.object().shape<TableReq>({\r\n\ttable: yup.string().required(),\r\n});\r\n\r\ninterface ItemReq {\r\n\ttable: string;\r\n\tid: number | string;\r\n}\r\n\r\nexport const itemSchema = yup.object().shape<ItemReq>({\r\n\ttable: yup.string().required(),\r\n\tid: yup.mixed().required(),\r\n});\r\n","module.exports = require(\"yup\");","import fs from 'mz/fs';\r\nimport path from 'path';\r\nimport * as _ from 'lodash';\r\nimport { makeVersion } from '../helpers';\r\nimport { DataSource } from '../datasource';\r\nimport {\r\n\tmakeReferences,\r\n\tmakeConstraints,\r\n\tMetadata,\r\n\tmakeTable,\r\n} from '../sheets';\r\n\r\n\r\nexport const fetch = async (\r\n\tds: DataSource,\r\n\tdataPath: string,\r\n) => {\r\n\tconst version = makeVersion(new Date());\r\n\r\n\tconst metadataList = await Promise.all([\r\n\t\tds.fetchReferences(),\r\n\t\tds.fetchConstraints(),\r\n\t]);\r\n\tconst references = makeReferences(metadataList[0]);\r\n\tconst constraints = makeConstraints(metadataList[1]);\r\n\tconst metadata = new Metadata(version, references, constraints);\r\n\r\n\tconst sheets = await ds.fetchSheets(references);\r\n\tconst tables = sheets.map((sheet) => {\r\n\t\treturn makeTable(sheet.name, sheet.values);\r\n\t});\r\n\r\n\tconst dstPath = path.resolve(dataPath, version);\r\n\tawait fs.mkdir(dstPath);\r\n\r\n\tawait metadata.save(dstPath);\r\n\tconst tasks = tables.map((table) => {\r\n\t\ttable.save(dstPath);\r\n\t});\r\n\tawait Promise.all(tasks);\r\n\r\n\treturn {\r\n\t\tversion,\r\n\t\tmetadata,\r\n\t};\r\n};\r\n\r\nconst main = async () => {\r\n\t// try {\r\n\t// \tawait fetch(...);\r\n\t// } catch (err) {\r\n\t// \tconsole.error(err);\r\n\t// }\r\n};\r\n\r\nif (require.main === module) {\r\n\tmain();\r\n}\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export const getTableName = (r: string) => r.split('!')[0];\r\nexport const sanitizeRange = (r: string) => r.replace(/'/g, '');\r\n\r\nexport interface Sheet {\r\n\tname: string;\r\n\tvalues: string[][];\r\n}\r\n","export interface Reference {\r\n\ttable: string;\r\n\trange: string;\r\n\tsheet: string;\r\n}\r\n\r\nexport const toDataRange = (ref: Reference) => {\r\n\treturn `${ref.table}!${ref.range}`;\r\n};\r\n\r\nexport const makeReference = (row: string[]): Reference => {\r\n\treturn {\r\n\t\ttable: row[0],\r\n\t\trange: row[1],\r\n\t\tsheet: row[2],\r\n\t};\r\n};\r\n\r\nexport const makeReferences = (values: string[][]) => {\r\n\treturn values.map((row) => makeReference(row));\r\n};\r\n\r\n","export enum ConstraintType {\r\n\tForeignKey = 'fk',\r\n\tUnique = 'unique',\r\n}\r\n\r\nexport interface Constraint {\r\n\ttype: ConstraintType;\r\n\tfirstTable: string;\r\n\tfirstAttribute: string;\r\n\tsecondTable: string;\r\n\tsecondAttribute: string;\r\n}\r\n\r\nexport const makeConstraint = (row: string[]): Constraint => {\r\n\t// TODO check type value\r\n\treturn {\r\n\t\ttype: row[0] as ConstraintType,\r\n\t\tfirstTable: row[1],\r\n\t\tfirstAttribute: row[2],\r\n\t\tsecondTable: row[3],\r\n\t\tsecondAttribute: row[4],\r\n\t};\r\n};\r\n\r\nexport const makeConstraints = (values: string[][]): Constraint[] => {\r\n\tif (values === undefined) { return []; }\r\n\t// else...\r\n\treturn values.map((row) => makeConstraint(row));\r\n};\r\n\r\nexport class ConstraintTable {\r\n\tprivate readonly constraints: Constraint[];\r\n\r\n\tconstructor(constraints: Constraint[]) {\r\n\t\tthis.constraints = constraints;\r\n\t}\r\n}\r\n","import fs from 'mz/fs';\r\nimport path from 'path';\r\nimport yaml from 'js-yaml';\r\nimport { Constraint } from './Constraint';\r\nimport { Reference } from './Reference';\r\n\r\nexport class Metadata {\r\n\tpublic readonly version: string;\r\n\tpublic readonly references: Reference[];\r\n\tpublic readonly constraints: Constraint[];\r\n\r\n\tconstructor(\r\n\t\tversion: string,\r\n\t\treferences: Reference[],\r\n\t\tconstraints: Constraint[],\r\n\t) {\r\n\t\tthis.version = version;\r\n\t\tthis.references = references;\r\n\t\tthis.constraints = constraints;\r\n\t}\r\n\r\n\tpublic async save(dataPath: string) {\r\n\t\treturn Promise.all([\r\n\t\t\tthis.saveItems(dataPath, `metadata-references.yaml`, this.references),\r\n\t\t\tthis.saveItems(dataPath, `metadata-constraints.yaml`, this.constraints),\r\n\t\t]);\r\n\t}\r\n\r\n\tprivate async saveItems<T>(dataPath: string, filename: string, items: T[]) {\r\n\t\tconst text = yaml.dump(items);\r\n\t\tconst dst = path.resolve(dataPath, filename);\r\n\t\tawait fs.writeFile(dst, text);\r\n\t}\r\n\r\n\tpublic findReference(table: string) {\r\n\t\tconst founds = this.references.filter((x) => x.table === table);\r\n\t\treturn founds.length ? founds[0] : undefined;\r\n\t}\r\n}\r\n\r\n\r\n","import fs from 'mz/fs';\r\nimport path from 'path';\r\nimport yaml from 'js-yaml';\r\nimport { RecordType, makeRecord, Record } from './Record';\r\nimport { makeAttributes, Attribute, AttributeType } from './Attribute';\r\n\r\nexport class Table<T extends RecordType> {\r\n\tpublic readonly name: string;\r\n\tpublic readonly items: T[];\r\n\r\n\tconstructor(name: string, items: T[]) {\r\n\t\tthis.name = name;\r\n\t\tthis.items = items;\r\n\t}\r\n\r\n\tpublic async save(dataPath: string) {\r\n\t\tconst text = yaml.dump(this.items);\r\n\t\tconst filename = `${this.name}.yaml`;\r\n\t\tconst dst = path.resolve(dataPath, filename);\r\n\t\tawait fs.writeFile(dst, text);\r\n\t}\r\n\r\n\tpublic get length() { return this.items.length; }\r\n}\r\n\r\n\r\nexport const makeTable = (name: string, values: string[][]) => {\r\n\tconst firstRow = values[0];\r\n\tconst attrs = makeAttributes(firstRow);\r\n\r\n\tconst knownIdAttr = attrs.find((a) => a.name === 'id');\r\n\tlet records: Record[] = [];\r\n\tif (knownIdAttr) {\r\n\t\trecords = values.slice(1).map((row) => makeRecord(attrs, row));\r\n\t} else {\r\n\t\t// id가 없는 경우 적당히 생성해서 넣어주기\r\n\t\tconst idAttr = new Attribute(AttributeType.Integer, 'id');\r\n\t\tconst newAttrs = [idAttr, ...attrs];\r\n\t\trecords = values.slice(1).map((row, idx) => {\r\n\t\t\tconst id = (idx + 1).toString();\r\n\t\t\tconst newRow = [id, ...row];\r\n\t\t\treturn makeRecord(newAttrs, newRow);\r\n\t\t});\r\n\t}\r\n\r\n\tconst items = records.map((r) => r.value);\r\n\treturn new Table(name, items);\r\n};\r\n\r\n","import {\r\n\tAttribute,\r\n\tAttributeType,\r\n} from './Attribute';\r\n\r\nexport class Cell {\r\n\tprivate readonly attr: Attribute;\r\n\tprivate readonly data: string;\r\n\r\n\tconstructor(attr: Attribute, data: string) {\r\n\t\tthis.attr = attr;\r\n\t\tthis.data = data;\r\n\t}\r\n\r\n\tpublic get value() { return this.attr.cast(this.data); }\r\n\tpublic get key() { return this.attr.name; }\r\n\tpublic get ty(): AttributeType { return this.attr.ty; }\r\n\tpublic get raw() { return this.data; }\r\n}\r\n","import fs from 'mz/fs';\r\nimport path from 'path';\r\nimport yaml from 'js-yaml';\r\nimport { RecordType, Table, Constraint, Reference, Metadata } from '../sheets';\r\n\r\nconst makeFilePath = (dataPath: string, version: string, filename: string) => {\r\n\tconst dbPath = path.resolve(dataPath, version);\r\n\treturn path.resolve(dbPath, filename);\r\n};\r\n\r\n\r\nconst readDataFile = async (dataPath: string, version: string, filename: string) => {\r\n\tconst fp = makeFilePath(dataPath, version, filename);\r\n\tconst buf = await fs.readFile(fp);\r\n\tconst text = buf.toString('utf8');\r\n\tconst content = yaml.load(text);\r\n\treturn content;\r\n};\r\n\r\n\r\nexport const findSheetNames = async (dataPath: string, version: string) => {\r\n\tconst dbPath = path.resolve(dataPath, version);\r\n\tconst list = (await fs.readdir(dbPath))\r\n\t\t.sort()\r\n\t\t.filter((x) => x.includes('.yaml'))\r\n\t\t.filter((x) => !x.startsWith('metadata-'))\r\n\t\t.map((x) => x.replace('.yaml', ''));\r\n\treturn list;\r\n};\r\n\r\nexport const loadTable = async <T extends RecordType>(dataPath: string, version: string, name: string) => {\r\n\tif (name.startsWith('metadata-')) {\r\n\t\treturn new Table(name, []);\r\n\t}\r\n\r\n\ttry {\r\n\t\tconst filename = `${name}.yaml`;\r\n\t\tconst items = await readDataFile(dataPath, version, filename) as T[];\r\n\t\treturn new Table(name, items);\r\n\r\n\t} catch (err) {\r\n\t\tconsole.error(err);\r\n\t\treturn new Table(name, []);\r\n\t}\r\n};\r\n\r\n\r\nexport const loadMetadata = async (dataPath: string, version: string) => {\r\n\tconst loadConstraints = async () => {\r\n\t\tconst filename = `metadata-constraints.yaml`;\r\n\t\tconst items = await readDataFile(dataPath, version, filename) as Constraint[];\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst loadReferences = async () => {\r\n\t\tconst filename = `metadata-references.yaml`;\r\n\t\tconst items = await readDataFile(dataPath, version, filename) as Reference[];\r\n\t\treturn items;\r\n\t};\r\n\r\n\tconst data = await Promise.all([\r\n\t\tawait loadReferences(),\r\n\t\tawait loadConstraints(),\r\n\t]);\r\n\r\n\treturn new Metadata(version, ...data);\r\n};\r\n","import { google } from 'googleapis';\r\nimport {\r\n\tsanitizeRange,\r\n\tgetTableName,\r\n\tReference,\r\n\ttoDataRange,\r\n\tSheet,\r\n} from '../sheets';\r\nimport { OAuth2Client } from 'googleapis-common';\r\nimport * as _ from 'lodash';\r\nimport { DataSource } from './base';\r\n\r\nexport class GSheetDataSource implements DataSource {\r\n\tprivate readonly auth: OAuth2Client;\r\n\tprivate readonly metadataSheetId: string;\r\n\r\n\tconstructor(auth: OAuth2Client, metadataSheetId: string) {\r\n\t\tthis.auth = auth;\r\n\t\tthis.metadataSheetId = metadataSheetId;\r\n\t}\r\n\r\n\tpublic async fetchReferences(): Promise<string[][]> {\r\n\t\tconst ref: Reference = {\r\n\t\t\ttable: 'metadata-references',\r\n\t\t\trange: 'A2:C',\r\n\t\t\tsheet: this.metadataSheetId,\r\n\t\t};\r\n\t\tconst founds = await this.fetchSheets([ref]);\r\n\t\treturn founds[0].values;\r\n\t}\r\n\r\n\tpublic async fetchConstraints(): Promise<string[][]> {\r\n\t\tconst ref: Reference = {\r\n\t\t\ttable: 'metadata-constraints',\r\n\t\t\trange: 'A2:E',\r\n\t\t\tsheet: this.metadataSheetId,\r\n\t\t};\r\n\t\tconst founds = await this.fetchSheets([ref]);\r\n\t\treturn founds[0].values;\r\n\t}\r\n\r\n\tpublic async fetchSheets(refs: Reference[]): Promise<Sheet[]> {\r\n\t\tconst groups = _.groupBy(refs, (x: Reference) => x.table);\r\n\t\tconst keys = _.keys(groups);\r\n\t\tconst tasks = keys.map(async (key) => {\r\n\t\t\tconst refs = groups[key];\r\n\t\t\tconst sheetId = refs[0].sheet;\r\n\t\t\tconst founds = await this.fetch(sheetId, refs);\r\n\t\t\treturn founds;\r\n\t\t});\r\n\t\tconst founds = _.flatten(await Promise.all(tasks));\r\n\t\treturn founds;\r\n\t}\r\n\r\n\tprivate async fetch(sheetId: string, refs: Reference[]) {\r\n\t\tconst ranges = refs.map((r) => toDataRange(r));\r\n\t\tconst sheets = google.sheets({ version: 'v4', auth: this.auth });\r\n\t\tconst resp = await sheets.spreadsheets.values.batchGet({\r\n\t\t\tspreadsheetId: sheetId,\r\n\t\t\tranges,\r\n\t\t});\r\n\t\tif (resp.status !== 200) { throw new Error(`batchGet failed: ${resp.statusText}`); }\r\n\t\tif (!resp.data.valueRanges) { throw new Error(`no values found`); }\r\n\r\n\t\tconst founds = resp.data.valueRanges.map((found) => {\r\n\t\t\tconst range = sanitizeRange(found.range!);\r\n\t\t\tconst name = getTableName(range);\r\n\t\t\tconst values = found.values!;\r\n\t\t\treturn { name, values };\r\n\t\t});\r\n\t\treturn founds;\r\n\t}\r\n}\r\n\r\n\r\nexport interface ServiceKey {\r\n\t// type: string;\r\n\t// project_id: string;\r\n\t// private_key_id: string;\r\n\tprivate_key: string;\r\n\tclient_email: string;\r\n\t// client_id: string;\r\n\t// auth_uri: string;\r\n\t// token_uri: string;\r\n\t// auth_provider_x509_cert_url: string;\r\n\t// client_x509_cert_url: string;\r\n}\r\n\r\nexport const getJWTClient = async (serviceKey: ServiceKey): Promise<OAuth2Client> => {\r\n\t// http://isd-soft.com/tech_blog/accessing-google-apis-using-service-account-node-js/\r\n\tconst client = new google.auth.JWT(\r\n\t\tserviceKey.client_email,\r\n\t\tundefined,\r\n\t\tserviceKey.private_key,\r\n\t\t['https://www.googleapis.com/auth/spreadsheets'],\r\n\t);\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tclient.authorize((err, tokens) => {\r\n\t\t\tif (err) { reject(err); }\r\n\t\t\telse { resolve(client); }\r\n\t\t});\r\n\t});\r\n};\r\n","module.exports = require(\"googleapis\");"],"sourceRoot":""}